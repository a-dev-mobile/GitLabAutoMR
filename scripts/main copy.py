import re
import argparse
from git import Repo, GitCommandError, Actor
import gitlab
import os
from prettytable import PrettyTable, ALL
import tempfile





# Содержимое cert.pem
CERT_PEM_CONTENT = """-----BEGIN CERTIFICATE-----
MIIDoTCCAomgAwIBAgIQEMXTfa3T3TKA9eHwX18hEzANBgkqhkiG9w0BAQsFADBN
MQswCQYDVQQGEwJSVTEgMB4GA1UEChMXTW9iaWxlIFRlbGVTeXN0ZW1zIFBKU0Mx
HDAaBgNVBAMTE01UUyBDbGFzcyAzIFJvb3QgQ0EwHhcNMTgwOTE0MDkwMDAwWhcN
MjMwOTE0MDkwMDAwWjBNMQswCQYDVQQGEwJSVTEgMB4GA1UEChMXTW9iaWxlIFRl
bGVTeXN0ZW1zIFBKU0MxHDAaBgNVBAMTE01UUyBDbGFzcyAzIFJvb3QgQ0EwggEi
MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDNfMqu9eYNEneBkTFcfAEduiZ+
MsTsiOhKKvng6eHg+sGUQOcglV0gn1bl/XN22zlJqnov3xT6h4GnAFYKze3FcuxK
Jd+lXv2mfJ5ERx6nCcrZH6yxnggl1w6t81RSZMNHTovN7aa/jHcs2Xv+FqGfrP5u
ieQWGjAj7U6tk3qpeHVvvM6pZBzkmnDcA+gWersqbzNWcZRffP5ZA/FvDwddURRT
Ve2iijls1k3f5XRvgaCXgzPBWsIHgWMJnxIuvGG8SNkajkFqDNIYYL4YJmNAx/5G
gI4XvQ/n0ebMTyH22hvNHHn4FaI91C0Z5ejkcR8uUIPZn8hAlSttA4f2fTWrAgMB
AAGjfTB7MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMBgGA1UdEQQR
MA+BDXJvb3RjYUBtdHMucnUwHQYDVR0OBBYEFNErOd5Kz2mSi3m0Aw5mMLRA4WmO
MB8GA1UdIwQYMBaAFNErOd5Kz2mSi3m0Aw5mMLRA4WmOMA0GCSqGSIb3DQEBCwUA
A4IBAQAwBWeLVnyGzT5CIMAaFoA+hOtCGj64ADAsmXrz+DnL1BVFElU6BKNMTEo7
LcLoEqeVq9SMpbGVEgJFRHa7UkIMcF4cZ+YoQZWB+i9ILT+dRMGBtTCa9NXtYusF
ycHLkFIBX80T+zIZXaQB72y9PMsW5JmGKO/3aOMJ09Ccm2WWPEyVKQW7jjkom/aM
UeMMuGocgyqDy30ZAKui1gHCICDEVtoW4vhWt+VRDQGpV+zOAVxq+Zij5XUUq4Q9
n/JPRyxoqq1NmODzYw/9RURlG9DQW8isR2CAPEL3VCICjcpfwkgzvJKqH39gmIXv
hSxWOMpYTQpb4iYIU4SXvfJTW6H9
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIC7TCCAdWgAwIBAgIQbxxQ3hlgHYlLiUSt25cxiTANBgkqhkiG9w0BAQUFADAh
MR8wHQYDVQQDExYwMDAxU01QTlMwMS5tc2subXRzLnJ1MB4XDTExMDQwNDEyMzEw
OFoXDTMxMDQwNDEyMzEwOFowITEfMB0GA1UEAxMWMDAwMVNNUE5TMDEubXNrLm10
cy5ydTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAObqU8g9LRpfEuSI
qmiTUpV9MnCjDhGfqxL958sC5GMyhiEcyoSXvb0pT1bpA4xW9RFEpMZd3mZ9nXoX
NtCNbit21XIF4Q9BTu8W/gS1TX4ejSxgVAmdA3BPGjzXlZBHHpnH3NxGhB13DIig
C9Gou5otnwXzRAgW1vUywocuxL8VrnNWbPETpK0wlg0c+Twe5BZSaYpxk5bvfLpo
kHDS29SPT1lxgB1bhmCugE4Up7abS2a4uY6s9aRlEOZa1S4dClfMWk7zGurivKfa
pUEDJbD6+2+3nZRlU7XxlI4Et1pvLKNk5mfF6VHwrwWrp3goom8T5vT48BLfgZS1
wD0J73UCAwEAAaMhMB8wHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMA0G
CSqGSIb3DQEBBQUAA4IBAQA1JpcIhUpysTcOgH78qFTLR5YvokqgjGIaIA/wFu94
mjS2/Qia8IF9SRYtWwpza/jZmdAoT1ofmub5pzkV/xA731qhuCpLMhKl9VqQcI5D
sA4tYwJI0FwkWWjLwC/HJCVL86qorigK8UGsSvzsALYR2wb1FbaONuzBmBQRQ1ef
yX0xMbBC5JTXgUgUGg/1n9tNelAQ13Vot7DaGyIe9PpScSRuNYY9RqYKt/LBha2t
OJKnoRDs4hxy+6wemSYr2QLCg6u52jgWSEMpEjlDSUyHWjHk5vF9By5qYm3uTthB
22kFBWuwAdnM7SQN5SQdeReP9WY2NuTC0IR0/8boXHoc
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
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
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIID5DCCAsygAwIBAgIVAKjZvFMj6v2JXbH5LbYxAlQ0InH9MA0GCSqGSIb3DQEB
BQUAMC4xLDAqBgNVBAMTI1NNUCAwMDAxU01QTlMwMS5tc2subXRzLnJ1IEFnZW50
IENBMB4XDTE0MTAwNjE5MzQzNloXDTM0MTAwNjE5MzQzNlowLjEsMCoGA1UEAxMj
U01QIDAwMDFTTVBOUzAxLm1zay5tdHMucnUgQWdlbnQgQ0EwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQCiZSaDe83r/qG/8wdxpfBioN3dHcbOEPZGqoFo
zj5qhFHK0icebtOxTwO7HZx+zjb8crvs4cNea29DLsY1/X1F+NKgcsMeS4h24aYC
leCNN+JMD6vJkBMwG8lUGBcJy6YTHO/X2+Z3VwulzzYHwoJKzfmGWZUAUPVxioND
ubsXgUh8jvBmYeT+2RbRwzn93+e4dbwF8XXAEv9NI1N4p9MxLqv0OZkTXCwSzh7a
hOLSgY6QpjpfJ+Mx/M210LpmRYgAch0z1Vhd+2YQdeWg9Ug31fDji+xDXQz6XI95
/QM61uGHCgbeP7xdpigPg0addUviqgxShKlqeajJkNyXlJx1AgMBAAGjgfgwgfUw
DAYDVR0TBAUwAwEB/zAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwCwYD
VR0PBAQDAgEGMGoGA1UdIwRjMGGAFDciUf6/XpIIyWTrPRBF1lm/aZlIoTKkMDAu
MSwwKgYDVQQDEyNTTVAgMDAwMVNNUE5TMDEubXNrLm10cy5ydSBBZ2VudCBDQYIV
AKjZvFMj6v2JXbH5LbYxAlQ0InH9MB0GA1UdDgQWBBQ3IlH+v16SCMlk6z0QRdZZ
v2mZSDAuBgNVHREEJzAlghYwMDAxc21wbnMwMS5tc2subXRzLnJ1ggswMDAxc21w
bnMwMTANBgkqhkiG9w0BAQUFAAOCAQEABtz0fyFVAOiX8hQ6Pnbe2vPfU1u6H56s
61+iQpqya4DG/3Z8a4wbRd5fxqKvnVRvIzKIZDFQO+1WPjBIVKyi2KeyVW9gp3Vv
YzZuvz4vXHy6LkqljxMkBEiG4+vtLsGOu8Vz5K6F7o9/qLDy6B+mn66tSiQmAyDd
1Toic+H3q27Fimm/UpRPJm5wsax8lA6QBQTUqkioPECV1yAh7tjOk9QnIp/KbWLc
Gc1ka57ujLeAJ/2o6dK0ZhjpEVHP67tKj/mJzkO2UuyRH+AdYm4YkZNdMSOH0ywF
HS5wPHDWGPpkz0h0wxSQ5sORurqsWZc8w7RKBB3WB2HaItU5wizYbQ==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDPzCCAiegAwIBAgIEcEN5+zANBgkqhkiG9w0BAQsFADA8MSAwHgYDVQQDDBdj
b20uYXBwbGUuc3lzdGVtZGVmYXVsdDEYMBYGA1UECgwPU3lzdGVtIElkZW50aXR5
MB4XDTI0MDIxNTExMjE1OVoXDTQ0MDIxMDExMjE1OVowPDEgMB4GA1UEAwwXY29t
LmFwcGxlLnN5c3RlbWRlZmF1bHQxGDAWBgNVBAoMD1N5c3RlbSBJZGVudGl0eTCC
ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ6+Y/kb9lWWdOBqYsuwgxkk
0Bha22SCloxGkwFT51ea148gif1RgfepfFGfnINsPVS8BInXVe65d2BMCTnbl/bA
El3WUehqUjzceo9J1vQ8aoxpKOZ6Evw5+lvg0N5xZh08tSaYqRZTuacFx4aZ8Qbu
TeGn8fi2yYCFWD1eME2xs1nCD/YE2Y413KW5556KkqLWGUo34rAhWHlxfF5hu7nJ
4egOr5DT4mBCPUwwDxowq5Z0QLpBGEjadWv2HAaQEoV7MsMNXb4rknpLpayUrnIV
wOiAEhXpjEdGvGmV806i1lcXCOHFOXz79S49gfQi4o5obg835iGnf2vtePyaIzUC
AwEAAaNJMEcwCwYDVR0PBAQDAgSwMCIGA1UdEQQbMBmCF2NvbS5hcHBsZS5zeXN0
ZW1kZWZhdWx0MBQGA1UdJQQNMAsGCSqGSIb3Y2QEBDANBgkqhkiG9w0BAQsFAAOC
AQEAPok4QGoVx0RxLhca+hvQRIgygPmLRvkciPy16x/dgj8ZSKr70GzHGYbZzzaA
ehXsnubf7IXu1Ug74/Ar6lS6VyZZvThS613Wq1MSfkQPxHMHCjHTuk3xjTX3TOeJ
W7I4aalx60aeeHwFCBQ8q/oh6MeBaf4pkHCM7/sFyW6COOKS3oBVRWbL4g5F+Isv
X0Ix6+FjC/5wi9ZyMsZQulO84x7MAiRgCSg2E2GAs4gPHy8Tpixadngs0hvwyNid
09aC16Bx4rc/IXURQF3m5XLMesLbvzbbNcPhzXgvHIk4Uxh7LtbjtX6tzUvAJf8v
wxnBo6LKjtTcxk2n+ZbjRg5q8Q==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIGaDCCBVCgAwIBAgIMLYExSamHHgw6nLEZMA0GCSqGSIb3DQEBCwUAMFAxCzAJ
BgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWduIG52LXNhMSYwJAYDVQQDEx1H
bG9iYWxTaWduIFJTQSBPViBTU0wgQ0EgMjAxODAeFw0yNDAzMjgwNjExNTBaFw0y
NTA0MjkwNjExNDlaMH4xCzAJBgNVBAYTAlJVMQ8wDQYDVQQIEwZNb3Njb3cxDzAN
BgNVBAcTBk1vc2NvdzE2MDQGA1UEChMtTW9iaWxlIFRlbGVTeXN0ZW1zIFB1Ymxp
YyBKb2ludC1TdG9jayBDb21wYW55MRUwEwYDVQQDDAwqLmN0eC5tdHMucnUwggEi
MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDO5+dYpQ4+f4CAm3fzfcZHUI9F
6SbjWsWe2+1kPVe9e10/WFZByk4hFRKShx8L2k/h+vGoJkZiMcEyKo76zLf0x35o
YlNdeBCV5SXv/clJTDPwbPs978mrwroRwYf/u4hnG6rJahwj9m6rmHZ+whD/kQsQ
16EUhv0uWTxOPx/I+5JbNTZCKp/u37SUIiYCqh2XKfgA4/hORXa4TmSH0gAsANPd
fay6cClzO9eVhtcEKI+viRBnHmUtd3yuPQdY9tM54nw/rWifHHZCrR44s9HRU8SO
ct5qUp7D6gbcxiG+3AhWVWBmTjRg0vzcJ3vRqU2htQqymRYxwgQPiY/4NHQdAgMB
AAGjggMSMIIDDjAOBgNVHQ8BAf8EBAMCBaAwDAYDVR0TAQH/BAIwADCBjgYIKwYB
BQUHAQEEgYEwfzBEBggrBgEFBQcwAoY4aHR0cDovL3NlY3VyZS5nbG9iYWxzaWdu
LmNvbS9jYWNlcnQvZ3Nyc2FvdnNzbGNhMjAxOC5jcnQwNwYIKwYBBQUHMAGGK2h0
dHA6Ly9vY3NwLmdsb2JhbHNpZ24uY29tL2dzcnNhb3Zzc2xjYTIwMTgwVgYDVR0g
BE8wTTBBBgkrBgEEAaAyARQwNDAyBggrBgEFBQcCARYmaHR0cHM6Ly93d3cuZ2xv
YmFsc2lnbi5jb20vcmVwb3NpdG9yeS8wCAYGZ4EMAQICMCMGA1UdEQQcMBqCDCou
Y3R4Lm10cy5ydYIKY3R4Lm10cy5ydTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYB
BQUHAwIwHwYDVR0jBBgwFoAU+O9/8s14Z6jeb48kjYjxhwMCs+swHQYDVR0OBBYE
FALKl7IUEsnMiLklPyCtdvRs0BleMIIBfwYKKwYBBAHWeQIEAgSCAW8EggFrAWkA
dgCi4wrkRe+9rZt+OO1HZ3dT14JbhJTXK14bLMS5UKRH5wAAAY6Dr7IxAAAEAwBH
MEUCIBjyuO7beXjJT+vDV95FhsOpEB89KFFUJlabgNYwNLBdAiEAs9UBMhIigpAo
ZnwYQ+spu6jJVVX2J8TIDvBc7lzeIwQAdgBOdaMnXJoQwzhbbNTfP1LrHfDgjhuN
acCx+mSxYpo53wAAAY6Dr7NHAAAEAwBHMEUCIEua1+2wbrURShtY6b4Uk8Mgl9AA
0dw9/xZ/5RnUIpERAiEAsRzIQtYkVvInnjIa7BbleLa5ZV5A+iLhm/4N1yySVBAA
dwDgkrP8DB3I52g2H95huZZNClJ4GYpy1nLEsE2lbW9UBAAAAY6Dr7M0AAAEAwBI
MEYCIQDtiUOlFGdWzbh2tTJ6SB8WUaDuFv7VRojFR9lJFXAooAIhAJNPq2v1VZVw
cnIsqISjWiqy0mXaSkTFOcGhmSwvRnP9MA0GCSqGSIb3DQEBCwUAA4IBAQATbBVl
+ppmqISKCs22/aA6b1ecEfqlF+6Boda+AvOGgD+6Mpv5n3B2btwCF2cwGnhE5rHu
LszQZBAOURHbqkP6xTz9g6ivuZ20Ay0HK2k2AtBnzOIw3HTBrrfkr6TxMaDLyaUp
tbdFxVuVkchWohUL+CR8WQBgQu2yOY0g68/y9BCeUZwYpE6lW/U+gxyqlAwknZBw
qkVFUiPXoqzP2BN4GD90ZExdJUuVlrRRU4lbsl9wGzUSYkkKTcpyEtQPdc2Nc3Mr
amHNoQuglHH0k7diNJt5XmOJsn1jxRjb5fJCdKAAk9IwSgwbzg1hG3KTOQTF6na+
QcP7bOgTrisI2ztJ
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFoTCCA4mgAwIBAgIQHuLb9X4TvvGMet8FDF/3kDANBgkqhkiG9w0BAQsFADBN
MQswCQYDVQQGEwJSVTEgMB4GA1UEChMXTW9iaWxlIFRlbGVTeXN0ZW1zIFBKU0Mx
HDAaBgNVBAMTE01UUyBDbGFzcyAyIFJvb3QgQ0EwHhcNMTgxMTIzMDkwMDAwWhcN
MjUxMTIzMDkwMDAwWjBNMQswCQYDVQQGEwJSVTEgMB4GA1UEChMXTW9iaWxlIFRl
bGVTeXN0ZW1zIFBKU0MxHDAaBgNVBAMTE01UUyBDbGFzcyAyIFJvb3QgQ0EwggIi
MA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCjOG3ZLGVFWvZ/lLldVt8XHjnL
blCK4gWYm1k5DIN3Dg7IO2E1EUsPbR6sCMejJqlW/5QfvXniD50GRiLtepOkQ6ta
IhvjoIg85NAe6QW6w16+ID/SZlP+a5KNt0R16r45zH5d6QO4jG+TW5vRgbc6SYQ2
AFly204SYGely4wb3WTkIYHxeqo+Rmv2n4fNtiXouaEtKQ9RWHZsp6zTzwOvpmLG
cC0WAqDGFmc2xBpjgITfR+rSFN6WuQK+7WCPV1nnYT78tau3hEcOFL6FCDJjtZRv
XK4x1kS2opIlqAnDB39UXV1eg+2pQ20KgIvkSIcfa7cBwrl6g9nS/ngiAGYGilcB
2ZIZyB1E/dKjRnFb1xJmPNo5xXZqCf6i8haa4NPepOabcFyNl3Jo6YYlNVlbC/ag
MQro9Lh8HCDDb2ScSyxELPS2TFAFS0PvQsuuaZe4bLCxMPHTTaqHiPyf9Lp2d+W7
XN6SooNsWemyp96numI1sjLxFTgQP5/JOo3E1ZyWcLqWMYk0eJ8WVtHpFfRHrGww
w0jkYPmxlWxFGoR3zf9NC0f3btp+HAsK0lgLpyLQzmEB+5XLV8l6HtjMkbeVgsS7
8KztxRQvfhheV0Ltymv0hlaqks82Cp9k8y1p56J1+z06kjtMZkDB5iej0uZVTpGK
4OuyQ2Jz12FIm8mSewIDAQABo30wezAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB
/wQEAwIBBjAYBgNVHREEETAPgQ1yb290Y2FAbXRzLnJ1MB0GA1UdDgQWBBQtNtiD
2Ik+IVKhVY/4rRcQiMCtujAfBgNVHSMEGDAWgBQtNtiD2Ik+IVKhVY/4rRcQiMCt
ujANBgkqhkiG9w0BAQsFAAOCAgEAlfX75cIjA55txZmkzx8fN4behhKllgmFSgfo
l0s1mmu4Rw32vI9TZdWs/lJlDYDVpIJ+hZb788YuPKxEom71B5ErHEn+lsG96cT9
TBoSspbXg0unZJbIFqYubdpcJPnCV+Z2joQ1C2/QSNSU3E0JdOl+OL/h4tIqARp2
b+PoQIEyHwoY3XZVibex09Y0nYPb+hELi+fZrU5Tm2FzTgOuqd4eF4peBB2xf+Ak
gS7yrdHUa12ALgrRdttPB1sYZbitCS9ybnosce3i7JK3FOquWAlfsN+rVTfPjuC9
1A4bHgPfp3FmtMPzZDiKQZ6rQYZYKltMHo6AqHjvBZKbF32Sugg3En2PKbD3Ybfs
nit1ttRe5HeGGvwZoM2oTGkwfX1yH85eA+TaG/z6V9J6pkz6MEWzeRIA0O84Zckf
4Ohk+QGtXnTpaxCtTnWScI4Sl80BGz1Gzn0eXf1t/D3xwujzJFRDYs7YUdRt1+AG
nrnNxmA4+JOUfljyo4ncF7/qX45vlCNRn2n2zThzOHCNX51pKvmv+SscXiiYuUb7
NZDQfOrXCL/JyuyxJVhNwhaRKv8jqT/y+4ZmUEiIpqs60JC6Dnzw1xy3mKP+jBZ1
z8yTgUyGNYgK9ElGO58hXqIdi8raDjHs6EDoZNwHJOgjv3+Rt2FEHiuqvvkrF2mA
MguXpio=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDGzCCAgOgAwIBAgIEMvYnOjANBgkqhkiG9w0BAQsFADAlMSMwIQYDVQQDExpS
b290IENlcnRpZmljYXRlIEF1dGhvcml0eTAeFw0yMDAyMTMxMzI5MDBaFw0zODAy
MTgwMDAwMDBaMCUxIzAhBgNVBAMTGlJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmJbam10b62F7ulaFIy8O
U8TNBj2Dm0hwsNIQ6/xxak5LN64rZY6+Lrxr41h4y8qQ8d0SYA0TZgeuyRJFEIeq
YFv8U9C+EZ7cSYgS7gBZpHI9Ith3Z7u8Dq6N2Lhve+2vQxqNM4zol+04SQRB6TXa
kPTxtQdtViSLltZxo4N8X3t0rD+uKKXnhYzMSLN19JMbEZF1vfzXXis0XuuEPPYy
wlHwVK5wt9DK1oN7dRrFr8bLZEQ6wE/vd4iqJCsBZ79N1LZJJPYbPGQAiCqbAEU5
Y4dXf8OHchUtvnVhFPUP3QdKWSdGa+rKt7ddzjZrERIYzhu9HPjHAt/fTa+5mDdY
yQIDAQABo1MwUTAPBgNVHRMBAf8EBTADAQH/MA8GA1UdIwQIMAaCBDL2JzowDgYD
VR0PAQH/BAQDAgEGMB0GA1UdDgQWBBQv1hlBZI2TG83pRWpmuwxyJhyJwzANBgkq
hkiG9w0BAQsFAAOCAQEAZ8s4fBGWVRY/UQ6upKkBFQaE+DHuSyj6SK8f7881aMHI
ZWlFZ6yuOySooDLPRrUFYCB5tZFmBo6oFDUguM3SOf/wQoJ5nbsLFonRuYs/3uFq
GHOjCeD/i4VvLNfPqOBGO+eGq7Z68HeaA/h6aFRfJkPADloH9SI1DLTL8f5/TS5H
CUQF3Nug1+iHMhrMr44z0V9eFvWZ2wt4CIpGbtFD0IujlR/zPmOKC3Pc+n1o0033
maPlM0+T1qBpYqXIeeIlowSzMJ4Rcnea1JZvUcKTq5EhD/I30xtnzII3LV0iVp2f
5Wlu4fVzz1+XuqJzSCf0DNdQa0jc6X/a9q9Tz7ibsw==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDRDCCAiygAwIBAgIEGn92kzANBgkqhkiG9w0BAQsFADA7MR8wHQYDVQQDDBZj
b20uYXBwbGUua2VyYmVyb3Mua2RjMRgwFgYDVQQKDA9TeXN0ZW0gSWRlbnRpdHkw
HhcNMjQwMjE1MTEyMTU5WhcNNDQwMjEwMTEyMTU5WjA7MR8wHQYDVQQDDBZjb20u
YXBwbGUua2VyYmVyb3Mua2RjMRgwFgYDVQQKDA9TeXN0ZW0gSWRlbnRpdHkwggEi
MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDINldxBeVjiSdWOlU9jGM85j1x
v3Q7WKZDB1Cg+jiqxNzWtoxiIBZxY9pmUbN1Ti0gZrfn7TqwB/u4BJCXJbFm1Qd9
wU+WE9UiPI6Gmw0fSqcTKYqo3hPwNz2VPIFwuKNKe88OlgcdHRPzSs9HrAkh8zje
F7KoOl6mVqNJ0BiuDK4sKjaoP6x0btSH+gmhnzC0IBv1HL2bQNiGi1tYNo8YQfPU
dOBKqPl+hSeHvRtfbXNWJ+zh7QGKufjjccwnAnD5WVx9Negcwn7wNf+6EnNYnnyb
TPFEgeU5CQJO1lfWB16h3B6AUfMbn+cl4bgBoWXa+30gYW6MObaPcP2knxhzAgMB
AAGjUDBOMAsGA1UdDwQEAwIFoDAhBgNVHREEGjAYghZjb20uYXBwbGUua2VyYmVy
b3Mua2RjMBwGA1UdJQQVMBMGCCsGAQUFBwMBBgcrBgEFAgMFMA0GCSqGSIb3DQEB
CwUAA4IBAQBW4qkINieApTNcZDQQd5VLtRALLDont+p4AXvA9zx8DcfXeJqpZ36U
D0VCRDNRR9h8XEw0+2u+FEvY45Fy56lt33syT+OgxEO/sxDSpneogqU396fnZzes
RUFiop63DG+TEDF5MaApT4GiWYK5cbzqcZMVz+CYTH/oF1Mepe5+wwHcn2I41uJq
lhXYMa0iIaSQvNfbduD2B/0fUsC+LPYNmZlV21eRWrFv8utmyGAOIAa6czfc+UzB
AfY6PJk2J1kV04NwUh2MIPon5JL4zLDMTQVFmwT8LIZeQWIUcM2/5AbzoxUGP1MX
mBKR+I5mNMGZERdiYdrG56YhwVktfiC3
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFzjCCA7agAwIBAgITWgAFZAOjvZh71u2BXwAAAAVkAzANBgkqhkiG9w0BAQsF
ADBRMRIwEAYKCZImiZPyLGQBGRYCcnUxEzARBgoJkiaJk/IsZAEZFgNtdHMxEzAR
BgoJkiaJk/IsZAEZFgNtc2sxETAPBgNVBAMTCHdpbmNhIEcyMB4XDTI0MDIxNjA3
MTYyN1oXDTI1MTEwNzA5MDAwMFowJTEjMCEGA1UEAxMaMDMwME5CQjBUUVBGSjI3
Lm1zay5tdHMucnUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQClpXbJ
6mp4a1AUfzIc1VmzXpzqlGCGZllwLwsht7TgJ17HAlpLu7xi4iImmjsIMji46cnG
HjV3S8g5iZfTB2uDVTwek/NVqDsaDNvMgYoE7/u3rYYE+Mau+hkfWdbcr8rZcT1o
v6/pU8Fx9Jpxfg1HI4YlB6K/2BClYCMr0+BxDBoHUp/vJz6BJ93wpr9bot6ukSGT
tLeH0MRFEc+arOIR+TkEwyJARe5ii73vLbMb1QIXDirVcoyYyqiWi2lzSPUNYK5v
kIAKDUAQksmSbdzD+3lLiZ1k5NR9SSgyhb1sp4U3elx8Sm7Mlk8xvBbVWZpmqy8D
lmAgrnMuPS4zjE0pAgMBAAGjggHJMIIBxTAOBgNVHQ8BAf8EBAMCBeAwJQYDVR0R
BB4wHIIaMDMwME5CQjBUUVBGSjI3Lm1zay5tdHMucnUwHQYDVR0OBBYEFO44aUnV
9hp6FBMS+F0Sx4AdNNC9MB8GA1UdIwQYMBaAFIUMhBiE3cEW5aKrXsffvpfj6exa
MGMGA1UdHwRcMFowWKBWoFSGJGh0dHA6Ly9wa2kubXRzLnJ1L3N0YXR1cy93aW5j
YWcyLmNybIYsaHR0cDovL3dpbmNhZzIubXRzLnJ1L2NlcnRlbnJvbGwvd2luY2Fn
Mi5jcmwweAYIKwYBBQUHAQEEbDBqMC4GCCsGAQUFBzAChiJodHRwOi8vcGtpLm10
cy5ydS9jZXJ0L3dpbmNhRzIuY3J0MDgGCCsGAQUFBzAChixodHRwOi8vd2luY2Fn
Mi5tdHMucnUvY2VydGVucm9sbC93aW5jYUcyLmNydDA7BgkrBgEEAYI3FQcELjAs
BiQrBgEEAYI3FQiFhM1kqJoshr2fJ4GIn3ec0QyBNYbS7xLJ+zkCAWQCATMwEwYD
VR0lBAwwCgYIKwYBBQUHAwIwGwYJKwYBBAGCNxUKBA4wDDAKBggrBgEFBQcDAjAN
BgkqhkiG9w0BAQsFAAOCAgEACa3DD6gjiEBn8dBKzNFtMfZX7RT+exyERKfaldy5
TWJxOmQ35JIqdkMR+I5/5TF8gkdyLgPc0bs7ks99tZCuYz7aQj3Eboy4rRvlgy2B
ri10pBPoG6qt+LH0orLVCDuk/gq1DqBDrIwNCnW4VHaRhE70QdnxAGylnKba6YBR
I7vpX/Tcl0vb/sdc20LmDEirPhPww+MvqKwkeTCWc2QzQGhV1Q4+IvdIICX6U9jv
RZE9WJ7+KuoqAaEdiCWUotW+cL47Nl4jdf4EIjVQTRTQfLFY2lu16QRzZ4OuAbkz
b2AMWjfO+Z7I5QaUZUMQAt/XasxL4+sl+ZiXuryFrBlrZiPUSeDfJ9tXQwvRGGY+
c5lg5V3iDEujSo4hADYPb3nNgkMV2kMxwmh64om+XdfgapVvJbtF1QA9jN2j+Nmx
PfY9t7Ey8lyae2rj1SXACrV9XsrQv0QBySy6BcGTL7mP9AR87qIrXnWydLAP3hwy
wggiOzlWNVrn+6mXNDB9Nt6CJF4dwBoOVmD84BnxhOsz+77MJS8OB7nzQL6shf+c
RO55+Lz0jFyjA0BGu8EqxzBrxTMWL1KaIYQ7s9H0TsssFZJDsR1SD6JP4wWwNgKQ
+zGUzRWGSN/13Nyrc5cARZC9fp0rA/bLLGIB5Yf/TanmG/XXtWEQYWfUXrUfnWOp
8so=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDDTCCAfWgAwIBAgIDBBCFMA0GCSqGSIb3DQEBDQUAMCgxJjAkBgNVBAMTHURl
dmljZXMgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MB4XDTI0MDQyNjA2MTU0M1oXDTI2
MDQyNzA2MTU0M1owKzEpMBEGA1UEBRMKVlBYVFFQRkoyNzAUBgNVBAsTDVhlbk1v
YmlsZSBNRE0wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALfdtANgTyJVGRmJ
jBzznf9aYQuNAHZZo/Rw1Gw8b5c3Q0w63zeUAWgSONGbmfUeQC/OX13JE8lTxpPy
GXN42bCyDZlY8DTAgcicUvjtN1iUCzS5SVZqIUCOysSZFTdrAH6QqpTD3Q/CdQE3
0YW9uUuJBRyQIhfMvHl0lTCgmua3AgMBAAGjgcAwgb0wDgYDVR0PAQH/BAQDAgWg
MBMGA1UdJQQMMAoGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwUAYDVR0jBEkwR4AU
oUDunG13LscMBdnHuX96OVdha0ChKaQnMCUxIzAhBgNVBAMTGlJvb3QgQ2VydGlm
aWNhdGUgQXV0aG9yaXR5ggQUFDFAMBcGCWCGSAGG+EIBDQQKFggyN0RKN1VIWDAd
BgNVHQ4EFgQUrPJO7U1yhBc8OoN47Eh9DdYcbFswDQYJKoZIhvcNAQENBQADggEB
AEKlGCpYpxccc9NkQiBcqwz7u9t0ERyc9JS6bAGTCLjtd+DGNLXV/v5LQeBFaLwy
SHBCZrKziE3aIMv6NZkxwXD8IwXF74ruAQ4UirzfqEHC94pCmpINzpQTNHfy71XA
IaziO4nWA0gDrSWOfvAsMr7/PnDnG/SnsatYpJ3ARrJSK5uywreF2wALCnXoZA2m
7p7PtBCdXhhnTfQ9ikqTtKeCflqbvsA4qqfRphg/vKRD+qCsiwcTTU72Wevw+SlD
Sbdq9+2GqyzKB1DyKISgOkBY9Cc4sO1OoRvMI0Hcg8uS/nSUH4vNv/uZUOwA1VGW
urRRnMWqyuc/X9sMYOivjdk=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDkjCCAnqgAwIBAgIRAOZ0GeBTjPUZLQ3ki7Ja0gAwDQYJKoZIhvcNAQEFBQAw
RTELMAkGA1UEBhMCUlUxIDAeBgNVBAoTF01vYmlsZSBUZWxlU3lzdGVtcyBPSlND
MRQwEgYDVQQDEwtNVFMgUm9vdCBDQTAeFw0xNjA4MjYxMjUyMjlaFw0yNjA4MzEy
MTAwMDBaMEUxCzAJBgNVBAYTAlJVMSAwHgYDVQQKExdNb2JpbGUgVGVsZVN5c3Rl
bXMgT0pTQzEUMBIGA1UEAxMLTVRTIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQCbpuoK7mVZfL7f9zJPwHdf654MHOK9orqSFGU2RwBUTzFN
PIMZGAUlOAfV85Kdt4JUEVRQyjTvfBZAzjgxDJWwyGMyy9pmFS1fv6RBurl6aVqO
Ah/WgRtt3+f3XEvjrhVmcETByKA9EqzM7eO7okT0anJwwmQx5GFYkcruiDLiMW85
L5rDtTTW//L4v6G9q8um6XouxSHZtxRu01jtUrSjtEQfdxqi5JoOqnk0PAhOQkuV
4qO0HZhVb8vvDEwuEDYITlFW7IQhZDsVuGf16s7nzNAMMICYSQ6Qil0b1Wjo4LT0
SOPdMSO2hJixaZZJTXdTyWmttEQEOzyionsJZoIrAgMBAAGjfTB7MA8GA1UdEwEB
/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMBgGA1UdEQQRMA+BDXJvb3RjYUBtdHMu
cnUwHQYDVR0OBBYEFBf/VFKGXzdjJI03b768tkpAyo+LMB8GA1UdIwQYMBaAFBf/
VFKGXzdjJI03b768tkpAyo+LMA0GCSqGSIb3DQEBBQUAA4IBAQBwPszGJbDVxtGa
/6dmvwcRGTEEB+NzZBG037jKEe0bIAxKm55AE78r8oVLc9HoWsIPuJ7SDoFdhv+l
0YZ5799q6xyjMBBNk1CfJUaehTCl98XQJtYLEfDGznkUdxur8McU7fz1KhDcNOm6
aCHoixgBmePbl1NJlRLxp6CyMony3ExPXdLbgsED+IvuBJR+lUkPOhDi4Yoagbt+
Fq9AYr3IlKDXAQyiBMSV1shiGx8yhus/mpeRCB7WY26M5vyGYeUSEyR6sYJ1XQyx
mfr+x6+tMTjbwpNSB1NFDsIuAwS02tcl1+6n08mDY+CyNp3tTsQEefcZbUs03zzj
hc1e+yBu
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFzjCCBLagAwIBAgIQTxHdrKj5go4fihV++5QoRjANBgkqhkiG9w0BAQsFADB1
MUQwQgYDVQQDDDtBcHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTELMAkGA1UECwwCRzMxEzARBgNVBAoMCkFw
cGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTI0MDUxNjA3MjMyNFoXDTI1MDUxNjA3
MjMyM1owgZQxGjAYBgoJkiaJk/IsZAEBDApBVjdQMzVHNVI5MTkwNwYDVQQDDDBB
cHBsZSBEZXZlbG9wbWVudDogRG1pdHJpeSBUcm9maW1vdiAoOTlQTTJLSDUzVSkx
EzARBgNVBAsMClU4M01LM1NZQjgxGTAXBgNVBAoMEERtaXRyaXkgVHJvZmltb3Yx
CzAJBgNVBAYTAlVTMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA+JCN
sShAHUOJygi/9CFy3CMl/hAhVzVnZsFXvI9a4+TQMS2LLqcZ9sk74HNGJWHbrFZB
/CfTfjIPhp1uxg72agjDFrfpm8nKgksuONaaqsoFtPclinLLRbmKW689eC3NCt/6
XCafKpCaUznqVBQed7evIP1EUwSFd8Fo2erJiarMqJjyxOu3PZ1IW7mHC36vpaDP
Z/+lykOV+znnQhkpgSQ+ZWqomj6tL92Kc4Zigg3wr9XBnvRaKuVpUC+f96wMh2TB
uPBASEIyay2DCnswnnA4s/3DROYDfN60T4KGxpRzSusJM5taFlwwY4+IRtuy90xI
Fw9IukUIeT1CRS/ylQIDAQABo4ICODCCAjQwDAYDVR0TAQH/BAIwADAfBgNVHSME
GDAWgBQJ/sAVkPmvZAqSErkmKGMMl+ynsjBwBggrBgEFBQcBAQRkMGIwLQYIKwYB
BQUHMAKGIWh0dHA6Ly9jZXJ0cy5hcHBsZS5jb20vd3dkcmczLmRlcjAxBggrBgEF
BQcwAYYlaHR0cDovL29jc3AuYXBwbGUuY29tL29jc3AwMy13d2RyZzMwNDCCAR4G
A1UdIASCARUwggERMIIBDQYJKoZIhvdjZAUBMIH/MIHDBggrBgEFBQcCAjCBtgyB
s1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3Vt
ZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRl
cm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFu
ZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDcGCCsGAQUFBwIB
FitodHRwczovL3d3dy5hcHBsZS5jb20vY2VydGlmaWNhdGVhdXRob3JpdHkvMBYG
A1UdJQEB/wQMMAoGCCsGAQUFBwMDMB0GA1UdDgQWBBQVi4wJjE1+ByTGB5Jxk5/F
O1SPMDAOBgNVHQ8BAf8EBAMCB4AwEwYKKoZIhvdjZAYBAgEB/wQCBQAwEwYKKoZI
hvdjZAYBDAEB/wQCBQAwDQYJKoZIhvcNAQELBQADggEBAADJyWj1X4IwWqmVP5zn
TdPLdRlOk72+eJ6o1pmmrcMH5oqf9a4qfa6w98+spRRAkHiiQl2YCc1YuvTGe921
+hXwI6t7sXrFSurX23BtaNbqrnsLLkLwNxvZ8E2/aoGDd9ITHq/Y73WlpaOfS3Ix
8O1O4bmxVkOQIAKpQR3mnk/SFYerMBcI68zoEy/zoTNYr+6d09/HK6pCGp0Kh3/j
Up/o7amInw5qxutMg0H0niypfRYG085773KNOxpCuC1/ZkYYoQQQTl6ijSaccqOC
ybmP/hrCAxNO/eglBTqZ4de/zAAw5Z+9upnmL8TlaSC4eyNYx3wKR94sWIc7XwjK
z5w=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEBDCCAuygAwIBAgIIGHqpqMKWIQwwDQYJKoZIhvcNAQELBQAwYjELMAkGA1UE
BhMCVVMxEzARBgNVBAoTCkFwcGxlIEluYy4xJjAkBgNVBAsTHUFwcGxlIENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5MRYwFAYDVQQDEw1BcHBsZSBSb290IENBMB4XDTEy
MDIwMTIyMTIxNVoXDTI3MDIwMTIyMTIxNVoweTEtMCsGA1UEAwwkRGV2ZWxvcGVy
IElEIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSYwJAYDVQQLDB1BcHBsZSBDZXJ0
aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UE
BhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCJdk8GW5pB7qUj
KwKjX9dzP8A1sIuECj8GJH+nlT/rTw6Tr7QO0Mg+5W0Ysx/oiUe/1wkI5P9WmCkV
55SduTWjCs20wOHiYPTK7Cl4RWlpYGtfipL8niPmOsIiszFPHLrytjRZQu6wqQID
GJEEtrN4LjMfgEUNRW+7Dlpbfzrn2AjXCw4ybfuGNuRsq8QRinCEJqqfRNHxuMZ7
lBebSPcLWBa6I8WfFTl+yl3DMl8P4FJ/QOq+rAhklVvJGpzlgMofakQcbD7EsCYf
Hex7r16gaj1HqVgSMT8gdihtHRywwk4RaSaLy9bQEYLJTg/xVnTQ2QhLZniiq6yn
4tJMh1nJAgMBAAGjgaYwgaMwHQYDVR0OBBYEFFcX7aLP3HyYoRDg/L6HLSzy4xdU
MA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUK9BpR5R2Cf70a40uQKb3R01/
CF4wLgYDVR0fBCcwJTAjoCGgH4YdaHR0cDovL2NybC5hcHBsZS5jb20vcm9vdC5j
cmwwDgYDVR0PAQH/BAQDAgGGMBAGCiqGSIb3Y2QGAgYEAgUAMA0GCSqGSIb3DQEB
CwUAA4IBAQBCOXRrodzGpI83KoyzHQpEvJUsf7xZuKxh+weQkjK51L87wVA5akR0
ouxbH3Dlqt1LbBwjcS1f0cWTvu6binBlgp0W4xoQF4ktqM39DHhYSQwofzPuAHob
tHastrW7T9+oG53IGZdKC1ZnL8I+trPEgzrwd210xC4jUe6apQNvYPSlSKcGwrta
4h8fRkV+5Jf1JxC3ICJyb3LaxlB1xT0lj12jAOmfNoxIOY+zO+qQgC6VmmD0eM70
DgpTPqL6T9geroSVjTK8Vk2J6XgY4KyaQrp6RhuEoonOFOiI0ViL9q5WxCwFKkWv
C9lLqQIPNKyIx2FViUTJJ3MH7oLlTvVw
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEPjCCAyagAwIBAgIUf7QAP82XSXrLg02SpIp4c8KEXUMwDQYJKoZIhvcNAQEL
BQAwYjELMAkGA1UEBhMCVVMxEzARBgNVBAoTCkFwcGxlIEluYy4xJjAkBgNVBAsT
HUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRYwFAYDVQQDEw1BcHBsZSBS
b290IENBMB4XDTIxMDkyMjE4NTUxMFoXDTMxMDkxNzAwMDAwMFowXjEtMCsGA1UE
AwwkRGV2ZWxvcGVyIElEIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MQswCQYDVQQL
DAJHMjETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDTLJVoIVSRir9lccIYTvbNDeGRKHXXA7qV
H9MSmVJE3oBGZ/wpiwCFiIowh01Mbkq0x+UC49djTKrM6uzbQi+RfSXpX6RLKlRv
F6wwnykoNKR/j+V4410jKiFG0InDX/hql51xGxiosgzJAwo1sgKnLfWz3BuDxSch
QHKm5zd2Mee7Br90svZwrEysLc3JXkWLz/sI5mLVQJW1N1zMGw7h79yl5Y3JULdA
nwojJUVAj5Rne+CU6jnTeKU00cLL4DN/LrYsw+Um1SXOqo0qd/yeFJaX4PVfLvLo
p3GnO6OZTHoio03vcBHV1oaBgvFnM5MzWkCxksSqc5YdxFz/4es3AgMBAAGjge8w
gewwEgYDVR0TAQH/BAgwBgEB/wIBADAfBgNVHSMEGDAWgBQr0GlHlHYJ/vRrjS5A
pvdHTX8IXjBEBggrBgEFBQcBAQQ4MDYwNAYIKwYBBQUHMAGGKGh0dHA6Ly9vY3Nw
LmFwcGxlLmNvbS9vY3NwMDMtYXBwbGVyb290Y2EwLgYDVR0fBCcwJTAjoCGgH4Yd
aHR0cDovL2NybC5hcHBsZS5jb20vcm9vdC5jcmwwHQYDVR0OBBYEFPg6DGkRduDt
rNHrpln6N9XEVbAeMA4GA1UdDwEB/wQEAwIBBjAQBgoqhkiG92NkBgIGBAIFADAN
BgkqhkiG9w0BAQsFAAOCAQEAwf1DClm/8bG3QxBa1hgyMBRWJuERSGMraXKXSB+O
W8peJhX7dCOAM1QzGaEihlrYuEtpqqfOlpbCCsc1atBvzoppg2JtSjn1/oNN16LU
iB/tiMAP+PkzHrQQt8JcETdENwSwpESdjGgNe30dfsy1k/DWbz0VeoCldNPhj33S
iOgxp5jFH9/iglmugIFgRhbsnrmKQKobKuFhhgqMcA/ZSizsTKIFEdZ5jKVjJSEj
Am+TW1pXoddFbd/M93+fX9vH7WSnb0Qvb009eHgKVrQ71zrIK2Wik+rbWOqO1LnE
wDD8MhpNupIMJDmYgjqgmd7n5OS8DryFr1qrXND828wQww==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFnTCCBIWgAwIBAgIQE4RcmHB/Z+GJ/5PLRC+D+DANBgkqhkiG9w0BAQsFADB1
MUQwQgYDVQQDDDtBcHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTELMAkGA1UECwwCRzMxEzARBgNVBAoMCkFw
cGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTIzMTAxMTE0MjM0MVoXDTI2MTAxMDE0
MjM0MFoweTEaMBgGCgmSJomT8ixkAQEMCjM4NE5ZWUJCOFYxJjAkBgNVBAMMHWlQ
aG9uZSBEaXN0cmlidXRpb246IE1UUywgUEFPMRMwEQYDVQQLDAozODROWVlCQjhW
MREwDwYDVQQKDAhNVFMsIFBBTzELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEB
AQUAA4IBDwAwggEKAoIBAQDY7bMYgMxdNb6jJhQW8lQXA9UWc9fz93uDVw/o6CpD
sNQqpNeRqagQuXW6VP9tBoN0VSFK4M6yujIGO3W9qaNL0i//+STlZ2fIrFH9L3Dv
JAxoUtPTA1qJ7Oy5mM4Dd5CONfGVDtFmxZkEuUrFpLpwG771jOQx0luCeCyoyd+b
MqbGtL7YrryACC3mXi91asCljr62JK0Px8EYaLgmQBaB1pHjevqOd20HFi/V+QkJ
rhPSnNV6w06B3c5ckjJVaTs3u6rbTMWOYZpKkpNOwNsSONLc0MDyZEt8uBolHSTc
AafIE1+4fZWHmAhHXSG+6xBbZGzWyK2O79dGgcASLzlnAgMBAAGjggIjMIICHzAM
BgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFAn+wBWQ+a9kCpISuSYoYwyX7KeyMHAG
CCsGAQUFBwEBBGQwYjAtBggrBgEFBQcwAoYhaHR0cDovL2NlcnRzLmFwcGxlLmNv
bS93d2RyZzMuZGVyMDEGCCsGAQUFBzABhiVodHRwOi8vb2NzcC5hcHBsZS5jb20v
b2NzcDAzLXd3ZHJnMzAxMIIBHgYDVR0gBIIBFTCCAREwggENBgkqhkiG92NkBQEw
gf8wgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ugb24gdGhpcyBjZXJ0aWZpY2F0
ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRhbmNlIG9mIHRoZSB0aGVuIGFw
cGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdXNlLCBj
ZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmljYXRpb24gcHJhY3RpY2Ugc3Rh
dGVtZW50cy4wNwYIKwYBBQUHAgEWK2h0dHBzOi8vd3d3LmFwcGxlLmNvbS9jZXJ0
aWZpY2F0ZWF1dGhvcml0eS8wFgYDVR0lAQH/BAwwCgYIKwYBBQUHAwMwHQYDVR0O
BBYEFFLK0RfkYVsukKVb9ppFNxgoyHjgMA4GA1UdDwEB/wQEAwIHgDATBgoqhkiG
92NkBgEEAQH/BAIFADANBgkqhkiG9w0BAQsFAAOCAQEAsHbvkF2Wdiyw8dmhDdsG
i9Lwwe71Mx28sqXRzYdhoMoZEOFQpmgUu+vlzR+xnrBxcIfAHrVqK+3cqHZhB4h9
LrGnPv8W7ThbDjdkku9PDbBJJf8s/gZVPwK2JQx1eAsFbDQIhuLBNuikRpxsTkHL
4BpgMwoZgxEoNPdpS0BaxKt6H70tnr4CXt/0Lj9oF6GgANR9nlt9iOdXNrI7FVbx
2MrPZm06tWstX8b/sB7KeR286ww0Cu86FggMFeyTyhyTrvHGdhjAWEXsX5bULEHa
NzVYzPb5W66W48Bhp3d3DKFMs96nZlI912wmEDnx5e3Nd85buWX6PLzjhPJwx7TE
SA==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFzjCCBLagAwIBAgIQYk1CtQAgaL2N8WfeGeyq2DANBgkqhkiG9w0BAQsFADB1
MUQwQgYDVQQDDDtBcHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTELMAkGA1UECwwCRzMxEzARBgNVBAoMCkFw
cGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTI0MDIyNzA4MTM0M1oXDTI1MDIyNjA4
MTM0MlowgZQxGjAYBgoJkiaJk/IsZAEBDApBVjdQMzVHNVI5MTkwNwYDVQQDDDBB
cHBsZSBEZXZlbG9wbWVudDogRG1pdHJpeSBUcm9maW1vdiAoOTlQTTJLSDUzVSkx
EzARBgNVBAsMClU4M01LM1NZQjgxGTAXBgNVBAoMEERtaXRyaXkgVHJvZmltb3Yx
CzAJBgNVBAYTAlVTMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzQs1
BYav8V7Iu6Dy5m8rsyCTZFqqJjjFjwHL3Em0fwx7yiGXtlKrv1Vcmr5EEEGBl3lJ
77LWtNBikHLNORk9b1TkMKuSvQ+CY5qGexyoBYEedvUb8FkYeMTRVs7xSNMRRhT4
OkbsXlCe2DhHrlsoH3mZ8oxa03PywbnzBAky7FS3ywiqHK9Tyqegasq3wyT/EkQ2
PtU9N9cIKx746XJNwfHFJH/7y1cBfGlNLZKTY0XFPkfSAkHSNorcY2lTS3PPPUGw
9yLSmwN4a6MpdB44u42e5g961E7d770tKw72wESBU1NL8IdB8mEQBSvi+ddMRXwE
ab0+YGz6uD+z+tsWjwIDAQABo4ICODCCAjQwDAYDVR0TAQH/BAIwADAfBgNVHSME
GDAWgBQJ/sAVkPmvZAqSErkmKGMMl+ynsjBwBggrBgEFBQcBAQRkMGIwLQYIKwYB
BQUHMAKGIWh0dHA6Ly9jZXJ0cy5hcHBsZS5jb20vd3dkcmczLmRlcjAxBggrBgEF
BQcwAYYlaHR0cDovL29jc3AuYXBwbGUuY29tL29jc3AwMy13d2RyZzMwNDCCAR4G
A1UdIASCARUwggERMIIBDQYJKoZIhvdjZAUBMIH/MIHDBggrBgEFBQcCAjCBtgyB
s1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3Vt
ZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRl
cm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFu
ZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDcGCCsGAQUFBwIB
FitodHRwczovL3d3dy5hcHBsZS5jb20vY2VydGlmaWNhdGVhdXRob3JpdHkvMBYG
A1UdJQEB/wQMMAoGCCsGAQUFBwMDMB0GA1UdDgQWBBT+cQv3LIIPmq5Q5tI5Mhx2
7HOGoDAOBgNVHQ8BAf8EBAMCB4AwEwYKKoZIhvdjZAYBAgEB/wQCBQAwEwYKKoZI
hvdjZAYBDAEB/wQCBQAwDQYJKoZIhvcNAQELBQADggEBAGo2y3HalS5j8gpz078+
PPVsUNn9UoqTG59hX6eDteE+ZfRRQ+084KwPbKG6D5A0XchDxNJdpOQtx0djyh+l
D5t9PWpAH5GDgd7t8PdNKMbRu7RTui0Gb1cQQtV8596BCGZlFc0+IezAigdg3FqI
Dq8vFZcZmE0rZt23DFnnIuprEsNZ69ovtWk+sRDbUDN9G/W3yYST3Xd5+jtjtXAV
FKQlpo+Cp8lM956DiZRpbD1PL8/+T2O5ajGzM/j8R93vG68CmiIJ8NDI45hAOXb+
oVX+MmVagsm+fdYMbtSx+rW5jQEPQdTIkkU8SdAI1DHlFc4OQstPGOdxe05SLJMZ
ghI=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIF3jCCBMagAwIBAgIQXAy2EfMKC9QNWmtqUZXNszANBgkqhkiG9w0BAQsFADB1
MUQwQgYDVQQDDDtBcHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTELMAkGA1UECwwCRzMxEzARBgNVBAoMCkFw
cGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTI0MDUxNjA4NTgyNFoXDTI1MDUxNjA4
NTgyM1owgaQxGjAYBgoJkiaJk/IsZAEBDApEWjk5NTVXSzhaMTowOAYDVQQDDDFB
cHBsZSBEZXZlbG9wbWVudDogdHJvZmltb3ZkaUBtdHMucnUgKDZOSE1TSFVZWlop
MRMwEQYDVQQLDApDSjJIUU1OUzI5MSgwJgYDVQQKDB/QlNC80LjRgtGA0LjQuSDQ
otGA0L7RhNC40LzQvtCyMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAOaEvCMsvvSz3ZmZ5DmZ/hdzY3gUcOFTViK/qYJhZxVXJC2h
OWisOatjfZn2+OzK8w7ZIeie67cIaYnoLY5+E5+palDLDrrePwfr+vm01Ic8CLJ2
NdDvQs5QlTV0lFkWJsQ1PTxJk++bkMOGCj8orh25tzKni7vWehXfVaZ+NJJy+ROR
tUzR1tOqsq5PBHrTnebqkWUuc0waA5pxjhhIHpJikEgjqIkE1cESHjr1psskixKG
qVBOEsjEVcF79h4us3/SVV/rNOZOztBjXQgSprUEevMWjEr0UJ6JGm+mbuGmMBdK
omUpLX2reF0RHqPPYsC3l3RU/J7xeT2jTwrWXEMCAwEAAaOCAjgwggI0MAwGA1Ud
EwEB/wQCMAAwHwYDVR0jBBgwFoAUCf7AFZD5r2QKkhK5JihjDJfsp7IwcAYIKwYB
BQUHAQEEZDBiMC0GCCsGAQUFBzAChiFodHRwOi8vY2VydHMuYXBwbGUuY29tL3d3
ZHJnMy5kZXIwMQYIKwYBBQUHMAGGJWh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3Nw
MDMtd3dkcmczMDQwggEeBgNVHSAEggEVMIIBETCCAQ0GCSqGSIb3Y2QFATCB/zCB
wwYIKwYBBQUHAgIwgbYMgbNSZWxpYW5jZSBvbiB0aGlzIGNlcnRpZmljYXRlIGJ5
IGFueSBwYXJ0eSBhc3N1bWVzIGFjY2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGlj
YWJsZSBzdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2UsIGNlcnRp
ZmljYXRlIHBvbGljeSBhbmQgY2VydGlmaWNhdGlvbiBwcmFjdGljZSBzdGF0ZW1l
bnRzLjA3BggrBgEFBQcCARYraHR0cHM6Ly93d3cuYXBwbGUuY29tL2NlcnRpZmlj
YXRlYXV0aG9yaXR5LzAWBgNVHSUBAf8EDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQU
y7shH0EPEvnu5GFRL0VvhSzBKKYwDgYDVR0PAQH/BAQDAgeAMBMGCiqGSIb3Y2QG
AQIBAf8EAgUAMBMGCiqGSIb3Y2QGAQwBAf8EAgUAMA0GCSqGSIb3DQEBCwUAA4IB
AQCrLiNNBpd1d6IECBL+l4HbpQlVb+UdGbtf105oEPp91LuSRAUtKa56BJ24harl
AvYyM4TsqZhRO3GI3NhzAzAZLo50rJWM2BR6Kf4QcRB82OlYffXKKokgLDtcgD2j
U5zjkepR6TEa+tf3qwzY4k6OAbdfZGbayfROOS609mOr0I7hZ431K515zeTpS5SG
C9l2zickhi4gIvAOkiFlc/OHXCFimDT4QSpZDwPpTgKfkt5kqhpMZ3QemS8wlTzI
5Vd+7shhRG3MsnbF5lhZuQwIPtdQZGScQMzI1Rtq+IQX7ALt4PNU4j1hnie//s1J
ZxkH2QOEx+OM+PNxcdvPqm/3
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIF1TCCBL2gAwIBAgIQdg6hYuFS31P5SIl/24/w0jANBgkqhkiG9w0BAQsFADB1
MUQwQgYDVQQDDDtBcHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTELMAkGA1UECwwCRzMxEzARBgNVBAoMCkFw
cGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTI0MDUxNjEyNTczNVoXDTI1MDUxNjEy
NTczNFowgZsxGjAYBgoJkiaJk/IsZAEBDApEWjk5NTVXSzhaMUgwRgYDVQQDDD9B
cHBsZSBEZXZlbG9wbWVudDog0JTQvNC40YLRgNC40Lkg0KLRgNC+0YTQuNC80L7Q
siAoVlg3S1JCM1ZGTCkxEzARBgNVBAsMCjM4NE5ZWUJCOFYxETAPBgNVBAoMCE1U
UywgUEFPMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBAL1WsvBd5vU5f2dkxoBuVwseZzbzMgbRh6ta2p/B58e6mHcUwTk92VqNrLeA
bxNDsFpuywmLEfyBtXBaDUEaqIwrohSsWjORt81ufqEp1nwrQMFgzKSR024rabt0
GMvXr9BxLzmfc2Hcsxcg51DKC+v4WmKGjrNWbuZjir08LbDKyus2fGxhuRdjemXC
bEnfTv4MF48AGsv1MP8mSVTia3WgRg3iEQlHSb1+uO+jyzi/sVkfyS/f3mm+p6Z/
dnogugc66BAV9ZCPo92Moe3sueNauOTD+4Jl+2cb8rHmmKqd4o1DQys+Ly5XGowF
FTys8Y8mf9rNzEilH0bIcbZ3YwECAwEAAaOCAjgwggI0MAwGA1UdEwEB/wQCMAAw
HwYDVR0jBBgwFoAUCf7AFZD5r2QKkhK5JihjDJfsp7IwcAYIKwYBBQUHAQEEZDBi
MC0GCCsGAQUFBzAChiFodHRwOi8vY2VydHMuYXBwbGUuY29tL3d3ZHJnMy5kZXIw
MQYIKwYBBQUHMAGGJWh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDMtd3dkcmcz
MDQwggEeBgNVHSAEggEVMIIBETCCAQ0GCSqGSIb3Y2QFATCB/zCBwwYIKwYBBQUH
AgIwgbYMgbNSZWxpYW5jZSBvbiB0aGlzIGNlcnRpZmljYXRlIGJ5IGFueSBwYXJ0
eSBhc3N1bWVzIGFjY2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGljYWJsZSBzdGFu
ZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2UsIGNlcnRpZmljYXRlIHBv
bGljeSBhbmQgY2VydGlmaWNhdGlvbiBwcmFjdGljZSBzdGF0ZW1lbnRzLjA3Bggr
BgEFBQcCARYraHR0cHM6Ly93d3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9y
aXR5LzAWBgNVHSUBAf8EDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQUB+FVIGW/i7FS
nL/TV9DLlbBxo2AwDgYDVR0PAQH/BAQDAgeAMBMGCiqGSIb3Y2QGAQIBAf8EAgUA
MBMGCiqGSIb3Y2QGAQwBAf8EAgUAMA0GCSqGSIb3DQEBCwUAA4IBAQBxz5dAMGjB
NHXhAbXwvgp7vqIBVxppWvoag5oaIofghxYeyhDKPcX4y0Rj1KpVhpFutGVXjPOf
FgtJLydTcnHInLWzEcWqTMixwwj3w9B2U0ck+hCGIQEqZxczKMnNlxvMBBDBdPEu
3vmjgCdSSubKPEffbe00tByhVKHGutz7Tkm+jRqp56IEDFJPkFfvIqZYn/pXnrBe
QE4RskL3lLQOJWGYOcmIqSqkZaZZJptesBMnrU6CoGNT53PVw0i6YZhXaZVEu1F3
VWOiElUA3MpHih8JPb7ZjO5fdyxeWQ5q+yCOyr82cWDe0bRGy7BrOJJ5HpAEcD1s
gSzZKwvb1A48
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDDTCCAfWgAwIBAgIJAJvCs3G1OWtjMA0GCSqGSIb3DQEBCwUAMBQxEjAQBgNV
BAMTCWxvY2FsaG9zdDAeFw0yNDAyMTcwOTUxNDBaFw0yNTAyMTcwOTUxNDBaMBQx
EjAQBgNVBAMTCWxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBALY2VUiYz1T6CC4TGlSO46i6jxyyeqlVuEuZ8zlNzAVWV85x5qRwN0iJPwBM
6d6wIW3gD5kT4op4nIkyuiCCCPHjlJLepaQxPPY8n+g/kegrDWMfGkmQ64u+M006
9rhT9I5NkXm4GrIZ+uemghqFYM6QNIcZP6nFEB2igi97lpm7BApTDaiTKjqwPE8X
hZRXB8NYkdD8dwH4e008zwxgDKLYspaxmFsakzf9KEvJbWFYCa71z4u0RqeIjfoF
bUzbY6ToqFRV+0TvM0zii+b4UFAoSkkendkbPK2RMsqq/Eb+NS6DAMzDNIBedNTx
8J1TK81PFNxb/oNmyg4kMwbmPo8CAwEAAaNiMGAwDAYDVR0TAQH/BAIwADAOBgNV
HQ8BAf8EBAMCBaAwFgYDVR0lAQH/BAwwCgYIKwYBBQUHAwEwFwYDVR0RAQH/BA0w
C4IJbG9jYWxob3N0MA8GCisGAQQBgjdUAQEEAQIwDQYJKoZIhvcNAQELBQADggEB
AKiFV1nYMjFySQJL8iSP3YxSNmvCod1uS4JpPZRf48dVVZJulPuHdg3vJc6qkxvy
0doxva2aCom5PWJBs3jebZ09U8H+9iv0aypqwujXA7cICZpy2BK1kXqRY9oaKaQI
2E7vjX5tI7KcZcVB6FiJUsNctVFEBxXKbe9Xiz+urZ0FgH/3RBzKRXT+BufMT56S
qTODBFhpzTe3b4yyjftW10SOea5t5V77pF1ZyzMzuJ5s0CMUeo1YAgKLPWq2dZ/t
aAVurSJ1S3nK0g4ig7R+DFQC7nwUK8rN1WVlP/a1KYVDprOksUaHrtJ+KJks88gs
/NDWcu+TFmvglDaSCD4QETg=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEUTCCAzmgAwIBAgIQfK9pCiW3Of57m0R6wXjF7jANBgkqhkiG9w0BAQsFADBi
MQswCQYDVQQGEwJVUzETMBEGA1UEChMKQXBwbGUgSW5jLjEmMCQGA1UECxMdQXBw
bGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxFjAUBgNVBAMTDUFwcGxlIFJvb3Qg
Q0EwHhcNMjAwMjE5MTgxMzQ3WhcNMzAwMjIwMDAwMDAwWjB1MUQwQgYDVQQDDDtB
cHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eTELMAkGA1UECwwCRzMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJ
BgNVBAYTAlVTMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2PWJ/KhZ
C4fHTJEuLVaQ03gdpDDppUjvC0O/LYT7JF1FG+XrWTYSXFRknmxiLbTGl8rMPPbW
BpH85QKmHGq0edVny6zpPwcR4YS8Rx1mjjmi6LRJ7TrS4RBgeo6TjMrA2gzAg9Dj
+ZHWp4zIwXPirkbRYp2SqJBgN31ols2N4Pyb+ni743uvLRfdW/6AWSN1F7gSwe0b
5TTO/iK1nkmw5VW/j4SiPKi6xYaVFuQAyZ8D0MyzOhZ71gVcnetHrg21LYwOaU1A
0EtMOwSejSGxrC5DVDDOwYqGlJhL32oNP/77HK6XF8J4CjDgXx9UO0m3JQAaN4LS
VpelUkl8YDib7wIDAQABo4HvMIHsMBIGA1UdEwEB/wQIMAYBAf8CAQAwHwYDVR0j
BBgwFoAUK9BpR5R2Cf70a40uQKb3R01/CF4wRAYIKwYBBQUHAQEEODA2MDQGCCsG
AQUFBzABhihodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDAzLWFwcGxlcm9vdGNh
MC4GA1UdHwQnMCUwI6AhoB+GHWh0dHA6Ly9jcmwuYXBwbGUuY29tL3Jvb3QuY3Js
MB0GA1UdDgQWBBQJ/sAVkPmvZAqSErkmKGMMl+ynsjAOBgNVHQ8BAf8EBAMCAQYw
EAYKKoZIhvdjZAYCAQQCBQAwDQYJKoZIhvcNAQELBQADggEBAK1lE+j24IF3RAJH
Qr5fpTkg6mKp/cWQyXMT1Z6b0KoPjY3L7QHPbChAW8dVJEH4/M/BtSPp3Ozxb8qA
HXfCxGFJJWevD8o5Ja3T43rMMygNDi6hV0Bz+uZcrgZRKe3jhQxPYdwyFot30ETK
XXIDMUacrptAGvr04NM++i+MZp+XxFRZ79JI9AeZSWBZGcfdlNHAwWx/eCHvDOs7
bJmCS1JgOLU5gm3sUjFTvg+RTElJdI+mUcuER04ddSduvfnSXPN/wmwLCTbiZOTC
NwMUGdXqapSqqdv+9poIZ4vvK7iqF0mDr8/LvOnP6pVxsLRFoszlh6oKw0E6eVza
UDSdlTs=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIF1TCCBL2gAwIBAgIQanpiV/b64TKGPnCujbdpMDANBgkqhkiG9w0BAQsFADB1
MUQwQgYDVQQDDDtBcHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTELMAkGA1UECwwCRzMxEzARBgNVBAoMCkFw
cGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTI0MDUxNjEwNTQzNFoXDTI1MDUxNjEw
NTQzM1owgZsxGjAYBgoJkiaJk/IsZAEBDApEWjk5NTVXSzhaMUgwRgYDVQQDDD9B
cHBsZSBEZXZlbG9wbWVudDog0JTQvNC40YLRgNC40Lkg0KLRgNC+0YTQuNC80L7Q
siAoVlg3S1JCM1ZGTCkxEzARBgNVBAsMCjM4NE5ZWUJCOFYxETAPBgNVBAoMCE1U
UywgUEFPMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBAOrcdxhW/52nTttoSdpY1fIOrLDW3JVM7Dsk8sztfMhd8RifhkbxzbawA21J
Sk/JY67hGz2JqeJUuvp/0yS7dVKPnleWXLEnX1hvso97qwKwPWoLwx2lzWsMLVis
aBOkP2OgHj8b7kbwVqXnHccRcJZS1cSc27D6j5PgyIrOKs2UQG+Q++WPiUzdvPeM
ELdgh3zNbMtFVloCYhJAUKylFnTUyJljewE4zIS/GZIKlcP+sNd6Vg6XAYXrRXG5
qrTRt+ksITu0QyY/ZFZuFQy/n/5ObcMH/vQ5HUyp80CvDi4iyd89b58i4MI/TIfc
gccBfH+XoySiUnduTDz4iJ1P3L8CAwEAAaOCAjgwggI0MAwGA1UdEwEB/wQCMAAw
HwYDVR0jBBgwFoAUCf7AFZD5r2QKkhK5JihjDJfsp7IwcAYIKwYBBQUHAQEEZDBi
MC0GCCsGAQUFBzAChiFodHRwOi8vY2VydHMuYXBwbGUuY29tL3d3ZHJnMy5kZXIw
MQYIKwYBBQUHMAGGJWh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDMtd3dkcmcz
MDQwggEeBgNVHSAEggEVMIIBETCCAQ0GCSqGSIb3Y2QFATCB/zCBwwYIKwYBBQUH
AgIwgbYMgbNSZWxpYW5jZSBvbiB0aGlzIGNlcnRpZmljYXRlIGJ5IGFueSBwYXJ0
eSBhc3N1bWVzIGFjY2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGljYWJsZSBzdGFu
ZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2UsIGNlcnRpZmljYXRlIHBv
bGljeSBhbmQgY2VydGlmaWNhdGlvbiBwcmFjdGljZSBzdGF0ZW1lbnRzLjA3Bggr
BgEFBQcCARYraHR0cHM6Ly93d3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9y
aXR5LzAWBgNVHSUBAf8EDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQUk6++v/CK4fmF
v/1kExqUG0HSXA4wDgYDVR0PAQH/BAQDAgeAMBMGCiqGSIb3Y2QGAQIBAf8EAgUA
MBMGCiqGSIb3Y2QGAQwBAf8EAgUAMA0GCSqGSIb3DQEBCwUAA4IBAQBPgQeB4Nm/
TwznZ3xRE7SuIjXFQ7c+0jxWfffjYaxAsJPUz3V4cOkwCeRNr7ReZgir/b7EiMu1
fNwKIxupMRq0T6OKEhnx2HY/wTg7gmYut4YrcL12MopLYhUxnaMLDhKjlxfxMa+x
LkLeEwxS4Q5C6V+11UJyCgo+7KIEmUpYeuXNaQjDIcLu0+Te/hHMh209OdsweStI
10xYa5TBrj2vG9SaMX9rw6/NNSEfyD1qPUtpL1/VxL9i1D9QGIW2RFXxmQ7UJ//P
i8tgt36NHuOVoqu622mnowMj6OznI9LKnVsCRBbJ8EFbG3G4yeoLU4j3F1bl68Ex
x9hyddFtExmx
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDFjCCApygAwIBAgIUIsGhRwp0c2nvU4YSycafPTjzbNcwCgYIKoZIzj0EAwMw
ZzEbMBkGA1UEAwwSQXBwbGUgUm9vdCBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkG
A1UEBhMCVVMwHhcNMjEwMzE3MjAzNzEwWhcNMzYwMzE5MDAwMDAwWjB1MUQwQgYD
VQQDDDtBcHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBDZXJ0aWZp
Y2F0aW9uIEF1dGhvcml0eTELMAkGA1UECwwCRzYxEzARBgNVBAoMCkFwcGxlIElu
Yy4xCzAJBgNVBAYTAlVTMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEbsQKC94PrlWm
ZXnXgtxzdVJL8T0SGYngDRGpngn3N6PT8JMEb7FDi4bBmPhCnZ3/sq6PF/cGcKXW
sL5vOteRhyJ45x3ASP7cOB+aao90fcpxSv/EZFbniAbNgZGhIhpIo4H6MIH3MBIG
A1UdEwEB/wQIMAYBAf8CAQAwHwYDVR0jBBgwFoAUu7DeoVgziJqkipnevr3rr9rL
JKswRgYIKwYBBQUHAQEEOjA4MDYGCCsGAQUFBzABhipodHRwOi8vb2NzcC5hcHBs
ZS5jb20vb2NzcDAzLWFwcGxlcm9vdGNhZzMwNwYDVR0fBDAwLjAsoCqgKIYmaHR0
cDovL2NybC5hcHBsZS5jb20vYXBwbGVyb290Y2FnMy5jcmwwHQYDVR0OBBYEFD8v
lCNR01DJmig97bB85c+lkGKZMA4GA1UdDwEB/wQEAwIBBjAQBgoqhkiG92NkBgIB
BAIFADAKBggqhkjOPQQDAwNoADBlAjBAXhSq5IyKogMCPtw490BaB677CaEGJXuf
QB/EqZGd6CSjiCtOnuMTbXVXmxxcxfkCMQDTSPxarZXvNrkxU3TkUMI33yzvFVVR
T4wxWJC994OsdcZ4+RGNsYDyR5gmdr0nDGg=
-----END CERTIFICATE-----

"""





def format_path(path):
    """Форматирует путь с прямыми слэшами."""
    return path.replace("\\", "/")

def print_table(rows):
    table = PrettyTable()
    table.hrules = ALL
    table.align = "l"
    table.header = False
    for key, value in rows:
        table.add_row([key, value])
    print(table)

def get_project_name(proj_path):
    """Получает название проекта из последней папки в пути"""
    return os.path.basename(os.path.normpath(proj_path))

def configure_environment(cert_content):
    """Настраивает окружение"""
    with tempfile.NamedTemporaryFile(delete=False, suffix='.pem') as temp_cert_file:
        temp_cert_file.write(cert_content.encode())
        temp_cert_path = temp_cert_file.name
    os.environ['REQUESTS_CA_BUNDLE'] = temp_cert_path

def parse_arguments():
    """Парсит аргументы командной строки"""
    parser = argparse.ArgumentParser(description="Скрипт для автоматизации создания веток и Merge Request в GitLab.")
    parser.add_argument("--proj_path", required=True, help="Путь к проекту.")
    parser.add_argument("--jira_task_id", required=True, help="ID задачи в Jira.")
    parser.add_argument("--jira_task_name", required=True, help="Имя задачи в Jira.")
    parser.add_argument("--initial_commit_msg", default="first commit", help="Сообщение первого коммита.")
    parser.add_argument("--task_desc_en", required=True, help="Описание задачи на английском.")
    parser.add_argument("--branch_kind", default="feature", help="Тип ветки (feature, hotfix, bugfix, release).")
    parser.add_argument("--base_branch", default="dev", help="Целевая ветка.")
    parser.add_argument("--gl_proj_id", type=int, required=True, help="ID проекта в GitLab.")
    parser.add_argument("--gl_base_url", default="https://gitlab.com/", help="Базовый URL GitLab.")
    parser.add_argument("--gl_token", required=True, help="Токен доступа GitLab.")
    parser.add_argument("--author_name", required=True, help="Имя автора для коммитов и Merge Request.")
    parser.add_argument("--author_email", required=True, help="Email автора для коммитов и Merge Request.")
    parser.add_argument("--mr_desc_file", default=".gitlab/merge_request_templates/Default.md", help="Путь к файлу с описанием Merge Request.")
    return parser.parse_args()

def validate_arguments(args):
    """Проверяет аргументы командной строки на корректность"""
    if not args.jira_task_id and not args.task_desc_en:
        raise ValueError("И jira_task_id, и task_desc_en пустые.")

    if args.task_desc_en and not re.match(r'^[a-z0-9_]+$', args.task_desc_en):
        raise ValueError("task_desc_en должно содержать только латинские буквы в нижнем регистре, цифры и нижние подчеркивания.")

def generate_branch_name(args):
    """Генерирует имя новой ветки на основе аргументов"""
    if not args.jira_task_id:
        return f"{args.branch_kind}/{args.task_desc_en}-short", f"[{args.branch_kind.capitalize()}] {args.jira_task_name}"
    elif args.task_desc_en:
        return f"{args.branch_kind}/{args.jira_task_id}_{args.task_desc_en}-short", f"[{args.branch_kind.capitalize()}][{args.jira_task_id}] {args.jira_task_name}"
    else:
        return f"{args.branch_kind}/{args.jira_task_id}-short", f"[{args.branch_kind.capitalize()}][{args.jira_task_id}] {args.jira_task_name}"

def branch_exists(repo, branch_name):
    """Проверяет существование ветки локально и на удаленных репозиториях"""
    local_exists = False
    remote_exists = False

    try:
        repo.git.rev_parse("--verify", f"refs/heads/{branch_name}")
        print(f"✔ Локальная ветка '{branch_name}' существует.")
        local_exists = True
    except GitCommandError:
        print(f"✘ Локальная ветка '{branch_name}' не существует.")

    for remote in repo.remotes:
        try:
            branches = repo.git.ls_remote("--heads", remote.name, branch_name)
            if branches:
                print(f"✔ Удаленная ветка '{branch_name}' существует на удаленном '{remote.name}'.")
                remote_exists = True
        except GitCommandError:
            print(f"✘ Не удалось проверить удаленную ветку '{branch_name}' на удаленном '{remote.name}'.")

    if local_exists and remote_exists:
        return "локально и на удаленном репозитории"
    elif local_exists:
        return "локально"
    elif remote_exists:
        return "на удаленном репозитории"
    else:
        print(f"✘ Ветка '{branch_name}' не найдена ни локально, ни на удаленных репозиториях.")
        return False

def mr_exists(project, branch_name):
    """Проверяет существование Merge Request для ветки"""
    mrs = project.mergerequests.list(state='opened', source_branch=branch_name)
    return len(mrs) > 0, mrs[0].web_url if mrs else None

def main():
    configure_environment(CERT_PEM_CONTENT)

    args = parse_arguments()
    validate_arguments(args)

    project_name = get_project_name(args.proj_path)
    new_branch_name, mr_title = generate_branch_name(args)

    repo = Repo(args.proj_path)
    current_branch_name = repo.active_branch.name

    if repo.is_dirty(untracked_files=True):
        user_response = input(f"Целевая ветка '{args.base_branch}' содержит изменения. Продолжить? (y/n): ")
        if user_response.lower() != 'y':
            raise RuntimeError("Процесс прерван пользователем.")
    
    if current_branch_name != args.base_branch:
        raise RuntimeError(f"Вы не на ветке '{args.base_branch}'. Вы на ветке '{current_branch_name}'. Необходимо переключиться на целевую ветку '{args.base_branch}' для продолжения.")

    gl = gitlab.Gitlab(args.gl_base_url, private_token=args.gl_token)
    project = gl.projects.get(args.gl_proj_id)

    location = branch_exists(repo, new_branch_name)
    if location:
        mr_exist, mr_url = mr_exists(project, new_branch_name)
        if mr_exist:
            raise RuntimeError(f"Merge Request для ветки '{new_branch_name}' уже существует. URL: {mr_url}")
        else:
            raise RuntimeError(f"Ветка {new_branch_name} уже существует {location}.")

    print("\n--- Подтверждение создания ветки и отправки на удаленный репозиторий ---\n")
    branch_info = [
        ("Project", project_name),
        ("Branch", new_branch_name),
        ("Author", args.author_name),
        ("Email", args.author_email),
    ]
    print_table(branch_info)
    
    confirm_branch = input("Вы согласны создать и отправить ветку с такими данными? (y/n): ")
    if confirm_branch.lower() != "y":
        raise RuntimeError("Создание ветки и отправка  - отменены пользователем.")

    new_branch_ref = repo.create_head(new_branch_name)
    new_branch_ref.checkout()
    repo.remote().push(refspec=f"{new_branch_name}:{new_branch_name}")
    print(f"✔ Ветка '{new_branch_name}' успешно создана и отправлена в удаленный репозиторий.")

    mr_desc_path = os.path.join(args.proj_path, args.mr_desc_file)
    mr_description = None
    if os.path.exists(mr_desc_path):
        with open(mr_desc_path, 'r', encoding='utf-8') as file:
            mr_description = file.read()
    else:
        print(f"Файл для описания Merge Request по пути '{args.mr_desc_file}' не найден.")

    
    print("\n--- Подтверждение создания Merge Request ---\n")
    mr_info = [
        ("Project", project_name),
        ("Title", mr_title),
        ("Target branch", args.base_branch),
        ("Description", mr_description if mr_description else "Описание отсутствует."),
    ]
    print_table(mr_info)
    confirm_mr = input("Согласны ли вы отправить Merge Request с такими данными? (y/n): ")
    if confirm_mr.lower() != "y":
        raise RuntimeError("Merge Request отменен пользователем.")
    mr_data = {
        "source_branch": new_branch_name,
        "target_branch": args.base_branch,
        "title": mr_title,
        "author": {
            "name": args.author_name,
            "email": args.author_email
        },
        "squash": True,
    }
    if mr_description:
        mr_data["description"] = mr_description
    mr = project.mergerequests.create(mr_data)
    print("\n✔ Merge Request создан")
    print("")
    print(mr.title)
    print(mr.web_url)

if __name__ == "__main__":
    main()
